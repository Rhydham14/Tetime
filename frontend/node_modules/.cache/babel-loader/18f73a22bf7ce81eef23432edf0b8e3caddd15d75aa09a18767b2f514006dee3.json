{"ast":null,"code":"import redirects from \"./redirects.json\";\n\n// Convert to a map for faster lookup in maybeRedirect()\n\nconst redirectMap = new Map();\nconst redirectIgnoreCaseMap = new Map();\nredirects.forEach(redirect => {\n  if (redirect.ignoreCase) {\n    redirectIgnoreCaseMap.set(redirect.fromPath, redirect);\n  } else {\n    redirectMap.set(redirect.fromPath, redirect);\n  }\n});\nexport function maybeGetBrowserRedirect(pathname) {\n  let redirect = redirectMap.get(pathname);\n  if (!redirect) {\n    redirect = redirectIgnoreCaseMap.get(pathname.toLowerCase());\n  }\n  return redirect;\n}","map":{"version":3,"names":["redirects","redirectMap","Map","redirectIgnoreCaseMap","forEach","redirect","ignoreCase","set","fromPath","maybeGetBrowserRedirect","pathname","get","toLowerCase"],"sources":["/home/rhydham/Documents/Tetime/frontend/node_modules/gatsby/cache-dir/redirect-utils.js"],"sourcesContent":["import redirects from \"./redirects.json\"\n\n// Convert to a map for faster lookup in maybeRedirect()\n\nconst redirectMap = new Map()\nconst redirectIgnoreCaseMap = new Map()\n\nredirects.forEach(redirect => {\n  if (redirect.ignoreCase) {\n    redirectIgnoreCaseMap.set(redirect.fromPath, redirect)\n  } else {\n    redirectMap.set(redirect.fromPath, redirect)\n  }\n})\n\nexport function maybeGetBrowserRedirect(pathname) {\n  let redirect = redirectMap.get(pathname)\n  if (!redirect) {\n    redirect = redirectIgnoreCaseMap.get(pathname.toLowerCase())\n  }\n  return redirect\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,kBAAkB;;AAExC;;AAEA,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC7B,MAAMC,qBAAqB,GAAG,IAAID,GAAG,CAAC,CAAC;AAEvCF,SAAS,CAACI,OAAO,CAACC,QAAQ,IAAI;EAC5B,IAAIA,QAAQ,CAACC,UAAU,EAAE;IACvBH,qBAAqB,CAACI,GAAG,CAACF,QAAQ,CAACG,QAAQ,EAAEH,QAAQ,CAAC;EACxD,CAAC,MAAM;IACLJ,WAAW,CAACM,GAAG,CAACF,QAAQ,CAACG,QAAQ,EAAEH,QAAQ,CAAC;EAC9C;AACF,CAAC,CAAC;AAEF,OAAO,SAASI,uBAAuBA,CAACC,QAAQ,EAAE;EAChD,IAAIL,QAAQ,GAAGJ,WAAW,CAACU,GAAG,CAACD,QAAQ,CAAC;EACxC,IAAI,CAACL,QAAQ,EAAE;IACbA,QAAQ,GAAGF,qBAAqB,CAACQ,GAAG,CAACD,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC;EAC9D;EACA,OAAOP,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}